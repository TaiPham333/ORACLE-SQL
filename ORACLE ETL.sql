-- ETL JobName:FACT_ACCT_ENTRY

SELECT U.PST_ENTR_ID PST_ENTR_ID,
       U.DATA_DT DATE_COB,
       SUBSTRING(U.PST_ENTR_REF, 1, INSTR(U.PST_ENTR_REF, '-', 1)-1):: VARCHAR(128) ID,
       R.PST_ENTR_AMT_FCY AMOUNT_FCY,
       R.PST_ENTR_AMT AMOUNT_LCY,
       CASE
           WHEN R.PST_ENTR_AMT < 0 THEN R.PST_ENTR_AMT
           ELSE NULL
       END DR_AMT_LCY,
       CASE
           WHEN R.PST_ENTR_AMT > 0 THEN R.PST_ENTR_AMT
           ELSE NULL
       END CR_AMT_LCY,
       IP2.UNQ_ID_SRC_STM::VARCHAR(9) BRANCH_PARENT_CODE,
       OU.BR_NO::VARCHAR(9) BRANCH_CODE,
       R.PST_ENTR_BOOK_DT T_BOOKING_DATE,
       R.PST_ENTR_VAL_DT T_VALUE_DATE,
       R.DVC_ID INPUTTER_NAME,
       R.ENTR_APRV T_AUTHORISER,
       R.PST_ENTR_CONSOL_KEY T_CONSOL_KEY,
       R.RVRS_MK :: VARCHAR(10) REVERSAL_MARKER,
       CASE
           WHEN (R.RVRS_MK ISNULL
                 AND R.PST_ENTR_AMT < 0)
                OR (R.RVRS_MK IS NOT NULL
                    AND R.PST_ENTR_AMT > 0) THEN 'DEBIT'
           WHEN (R.RVRS_MK IS NULL
                 AND R.PST_ENTR_AMT > 0)
                OR (R.RVRS_MK IS NOT NULL
                    AND R.PST_ENTR_AMT < 0) THEN 'CREDIT'
           ELSE NULL
       END CRF_TP,
       R.UOM_ID CURRENCY,
       IP1.UNQ_ID_SRC_STM::INTEGER CUSTOMER_ID,
       CL3.DSC_VIET::VARCHAR(256) CUSTGROUP, 
       R.TXN_REF TRANSACTION_NO,
       CL2.SRC_CL_ID TRANSACTION_TYPE_ID,
       CASE
           WHEN RIGHT(R.UNQ_ID_SRC_STM, 1) = 'A' THEN AR.UNQ_ID_SRC_STM
           WHEN RIGHT(R.UNQ_ID_SRC_STM, 1) = 'P' THEN R.PST_ENTR_CONSOL_KEY
           WHEN RIGHT(R.UNQ_ID_SRC_STM, 1) = 'R' THEN R.PST_ENTR_CONSOL_KEY
           ELSE NULL
       END AC_KEY,
       R.PST_ENTR_DT_TM T_DATE_TIME,
       R.DESCRIPTIONS::VARCHAR(256) DESCRIPTIONS,
       R.TXN_REF T_OUR_REFERENCE,
       R.PL_CGY_ID CATEGORY_CODE,
       R.PD_CGY PRODUCT_CATEGORY,
       R.STMT_NBR::VARCHAR(500) T_STMT_NO,
       R.UNQ_ID_SRC_STM UNQ_ID_SRC_STM,
       CASE
           WHEN RIGHT(U.PST_ENTR_REF, 1) = 'A' THEN 'STMT'
           WHEN RIGHT(U.PST_ENTR_REF, 1) = 'P' THEN 'CATEG'
           WHEN RIGHT(U.PST_ENTR_REF, 1) = 'R' THEN 'SPEC'
       END :: VARCHAR(5) SOURCE_TYPE,
       CASE
           WHEN RIGHT(U.PST_ENTR_REF, 1) = 'A' THEN AR.UNQ_ID_SRC_STM
		   -- 20220105 - longnq - begin:
           WHEN RIGHT(U.PST_ENTR_REF, 1) = 'P' THEN LEFT(AR.UNQ_ID_SRC_STM, 8)
           ELSE AR.UNQ_ID_SRC_STM
		   -- 20220105 - longnq - end.
       END ARRENGEMENT_ID,
       R.PST_ENTR_CONSOL_KEY 
       || '.' || 
       CASE
           WHEN (R.RVRS_MK ISNULL
                 AND R.PST_ENTR_AMT < 0)
                OR (R.RVRS_MK IS NOT NULL
                    AND R.PST_ENTR_AMT > 0) THEN 'DEBIT'
           WHEN (R.RVRS_MK IS NULL
                 AND R.PST_ENTR_AMT > 0)
                OR (R.RVRS_MK IS NOT NULL
                    AND R.PST_ENTR_AMT < 0) THEN 'CREDIT'
           ELSE NULL
       END 
       || '.' || R.PST_ENTR_BOOK_DT ENTR_KEY_ID,
       U.PST_ENTR_REF_LINE LINE_ID,
       U.GL LINE_NUMBER,
       U.PPN_TM PPN_TM,
       L.FO_TXN_NO ORDER_FO,
       CASE
           WHEN R.PST_ENTR_TP_ID IN (201200629,
                                     201200630)
                AND LEFT(R.TXN_REF, 2) <> 'RV' THEN 'KETCHUYEN'
           ELSE NULL
       END EOY_TYPE,
       U.PST_DT PST_DT,
       ASI.GL_AC_NBR::INTEGER     GL_NUMBER,
	   IP11.UNQ_ID_SRC_STM::VARCHAR(12)  CUSTOMER_ID_TBL    --longnq bo sung 20230111															
FROM #STATICPARM.SFDB2_DBSCHEMA#.PST_ENTR_X_AU U
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.PST_ENTR R ON R.PST_ENTR_ID = U.PST_ENTR_ID
----AND R.DATA_DT = U.DATA_DT   ---longnq fix 20230110 vi but toan chi co 1 ko can where data_date
AND R.DATA_DT >= DATE(TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD')) - 3 DAYS
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR AR ON AR.AR_ID = R.PST_ENTR_AR_ID
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.TXN L ON R.TXN_ID = L.TXN_ID
-- AND R.DATA_DT = L.DATA_DT --- trucnqn - bo dieu kien data_dt
AND L.DATA_DT BETWEEN DATE(TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD')) - 3 DAYS AND DATE(TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD')) + 3 DAYS
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.ACG_STC_ITM ASI ON U.GL = ASI.ACG_STC_ITM_ID
AND U.DATA_DT >= ASI.EFF_DT
AND U.DATA_DT <= ASI.END_DT
-----longnq fix 20230111
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.IP IP1 ON R.PRIM_CST_ID = IP1.IP_ID           ----customer theo but toan
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.IP IP11 ON (CASE WHEN L.UNQ_ID_SRC_STM LIKE 'TT%' THEN NVL(L.PRIM_CST_ID,R.PRIM_CST_ID) ELSE R.PRIM_CST_ID END) = IP11.IP_ID     ---customer uu tien theo giao dich
----end longnq fix 20230111			   
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.OU OU ON OU.OU_IP_ID = R.OU_ID
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.IP IP2 ON (CASE
                                                        WHEN OU.PRN_OU_IP_ID IS NULL THEN OU.OU_IP_ID
                                                        ELSE OU.PRN_OU_IP_ID
                                                    END) = IP2.IP_ID
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.CV CL2 ON R.PST_ENTR_TP_ID = CL2.CL_ID  --lnq update thay L.TXN_TP_ID --> R.PST_ENTR_TP_ID 20230214
AND CL2.CLS_SRC_NM = 'Transaction'
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.IP_X_GRP GR ON GR.IP_ID = R.PRIM_CST_ID   --FIX LAY CUSTGROUP THEO CUSTOMER CUA BUT TOAN --longnq fix 20230111
AND gr.DATA_DT = IP1.DATA_DT
AND gr.IP_X_GRP_TP_ID = 103100001 -- custgroup
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.CV CL3 ON cl3.CL_ID = GR.GRP_ID
WHERE U.DATA_DT = DATE(TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD'))

----------------------------------------------------------------------------------------------------------------------------------------

-- ETL JobName:FACT_DEPOSIT

SELECT 
--	axa.AR_ID AS AR_ID,
	to_date(#DYNAMICPARM.DATADT#, 'yyyymmdd')::DATE AS DATE_COB,
	dd.DIMENSION_KEY AS DEPOSIT_FK,
	ar.UNQ_ID_SRC_STM::varchar(30) AS ACCOUNT_NO,
	CASE WHEN pd.UNQ_ID_SRC_STM IN ('1007','1008') THEN NULL ELSE cst.UNQ_ID_SRC_STM END::INTEGER AS CUSTOMER_ID,
	br.UNQ_ID_SRC_STM::VARCHAR(9) AS BRANCH_CODE,
	axa.AU_ID::INTEGER AS GL_CODE_3,
	nvl(LAST_COB.BAL_FCY,0) AS BALANCE_AMT_LAST_COB,
	nvl(LAST_COB.BAL_LCY,0) AS BALANCE_LCY_AMT_LAST_COB,
	AXA.CCY_ID::VARCHAR(3) AS CURRENCY,
	term.SRC_CL_ID AS TERM,
	AXA.BAL_FCY AS BALANCE_AMT,
	AXA.BAL_LCY AS BALANCE_LCY_AMT,
	AMT491.BAL_LCY::DECIMAL(20,4) AS SODU491_QD,  --LNQ FIX 20230203
	AMT491.BAL_FCY::DECIMAL(20,4) AS SODU491_NT,  --LNQ FIX 20230203
	nvl(arx_rate0.EFF_RATE_PCT,arx_rate1.EFF_RATE_PCT)::DECIMAL(10,4) AS INTEREST_RATE,
	pd.UNQ_ID_SRC_STM::DECIMAL(10,0) AS CATEGORY_CODE,
	NULL::VARCHAR(20) AS CUSTGROUP_AR,
	doc.SRC_CL_ID AS LEGAL_DOC_NAME,
	ii.IP_IDENT AS LEGAL_ID,
	nvl(idv.IDENTN_NBR, org.ORG_TAX_ID_NO) AS TAX_ID,
	ftp.TOTAL_INT_RATE AS FTP_RATE,
	bal.avg_bal::DECIMAL(20,4) AS AVG_BAL_FROM_MONTH_BEGIN 
FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AU axa 
INNER JOIN #STATICPARM.SFDB2_DBSCHEMA#.ar ar ON axa.AR_ID = ar.AR_ID
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.IP cst ON cst.IP_ID = ar.PRIM_CST_ID
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_PD axp ON axp.AR_ID = axa.AR_ID
	AND axp.AR_X_PD_TP_ID = 102700003
	AND axp.DATA_DT = to_date(#DYNAMICPARM.DATADT#, 'yyyymmdd')::DATE
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.PD pd ON pd.PD_ID = axp.PD_ID
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AU last_cob
 	ON last_cob.AR_CRB_ID = axa.AR_CRB_ID
 	and last_cob.AR_CRB_ID  <> 'ROUNDING.ADJUSTMENT'  
	AND Left(last_cob.GL_AC_NBR,2) in (42,43,44)
	AND last_cob.SRC_STM_ID IN ('103900029') AND last_cob.AR_X_AU_TP_ID = 103800001
	and last_cob.DATA_DT   = (SELECT last_wk_dt FROM OCBDW2.WORKING_DATE WHERE MSR_PRD_DT=  to_date(#DYNAMICPARM.DATADT#, 'yyyymmdd')::DATE)
left JOIN #STATICPARM.SFDB2_DBSCHEMA#.IP br ON br.IP_ID = axa.OU_ID 
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_FIX_TERM aft ON aft.AR_ID = axa.AR_ID 
	AND aft.DATA_DT = to_date(#DYNAMICPARM.DATADT#, 'yyyymmdd')::DATE
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.CV term ON term.CL_ID = aft.NTNL_TM_MAT_SEG_ID 

---20230202: Anhnt fix INT_RATE
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_RATE arx_rate1 ON arx_rate1.AR_ID = axa.AR_ID 
	and  nvl(arx_rate1.EFF_RATE_PCT,0)<>0 
	AND arx_rate1.RATE_TP_ID = 100900008	--GCIINT
	AND arx_rate1.AR_X_RATE_TP_TP_ID =   101100001	--INTEREST
	AND arx_rate1.EFF_DT= to_date(#DYNAMICPARM.DATADT#, 'yyyymmdd')::DATE
LEFT JOIN 
(SELECT 
    ARXRATE1.AR_ID,
    ARXRATE1.EFF_RATE_PCT 
FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_X_RATE ARXRATE1
WHERE NVL(ARXRATE1.EFF_RATE_PCT,0)<>0 
    AND ARXRATE1.RATE_TP_ID = 100900001 
    AND ARXRATE1.AR_X_RATE_TP_TP_ID = 101100001 
    AND ARXRATE1.EFF_DT = to_date(#DYNAMICPARM.DATADT#, 'yyyymmdd')::DATE
UNION 
SELECT 
    ARXRATE2.AR_ID,
    ARXRATE2.EFF_RATE_PCT 
FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_X_RATE ARXRATE2
WHERE NVL(ARXRATE2.EFF_RATE_PCT,0)<>0 
    AND ARXRATE2.RATE_TP_ID = 100900002 
    AND ARXRATE2.AR_X_RATE_TP_TP_ID = 101100003 
    AND ARXRATE2.EFF_DT= to_date(#DYNAMICPARM.DATADT#, 'yyyymmdd')::DATE
    AND NOT EXISTS (SELECT 1 
                    FROM  #STATICPARM.SFDB2_DBSCHEMA#.AR_X_RATE I 
                    WHERE NVL(I.EFF_RATE_PCT,0)<>0 
                        AND I.AR_X_RATE_TP_TP_ID = 101100001 
                        AND I.RATE_TP_ID = 100900001 
                        AND I.EFF_DT = to_date(#DYNAMICPARM.DATADT#, 'yyyymmdd')::DATE
                        AND I.AR_ID = ARXRATE2.AR_ID )
) arx_rate0 on arx_rate0.AR_ID= axa.AR_ID 

--END
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.IP_IDENTN ii ON ii.IP_ID = cst.IP_ID 
	AND to_date(#DYNAMICPARM.DATADT#, 'yyyymmdd')::DATE BETWEEN ii.EFF_DT AND ii.END_DT -1
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.CV doc ON doc.CL_ID = ii.IP_IDENTN_TP_ID 
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.ORG org ON org.ORG_ID = CST.IP_ID --AND org.IDENTN_TP_ID = '200800002' --TAX
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.IDV_PRFL idv ON idv.IDV_ID = CST.IP_ID AND idv.IDENTN_TP_ID = '200800002' --TAX
	AND to_date(#DYNAMICPARM.DATADT#, 'yyyymmdd')::DATE BETWEEN idv.EFF_DT AND idv.END_DT -1
LEFT JOIN #STATICPARM.FTPDB2_DBSCHEMA#.FTP_CONTRACT_HIST ftp ON ftp.AR_NO = ar.UNQ_ID_SRC_STM 
	AND ftp.SYSTEM_ID IN ('TGUI_KH','TGUI_GTCG','TT2_TGUI_GTCG','TGUI_UYTHAC')
	AND ftp.DATA_DATE = #DYNAMICPARM.DATADT#
	AND ftp.STATUS = 1
LEFT JOIN
	(	SELECT AR_ID,
    AVG(CLS_BOOK_BAL) AS AVG_BAL
	FROM 
		(SELECT AR_ID, CLS_BOOK_BAL, MSR_PRD_ID AS DAY_IN_MTH FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_TVR_SMY ATS
			WHERE DATA_DT BETWEEN FIRST_DAY(TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD'))::DATE AND TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')
		UNION ALL
		SELECT AR_ID, CLS_BOOK_BAL, DAYS_OFF.MSR_PRD_ID AS DAY_IN_MTH  FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_TVR_SMY GEN_AR
		INNER JOIN 
			(SELECT LAST_WK_ID, MSR_PRD_ID 
				FROM #STATICPARM.SFDB2_DBSCHEMA#.WORKING_DATE 
				WHERE TO_DATE(MSR_PRD_ID,'YYYYMMDD') BETWEEN FIRST_DAY(TO_DATE(#DYNAMICPARM.DATADT#,'YYYYMMDD'))::DATE AND TO_DATE(#DYNAMICPARM.DATADT#,'YYYYMMDD')
	    			AND BSN_DAY_F = 0
	    	) DAYS_OFF	ON GEN_AR.MSR_PRD_ID = DAYS_OFF.LAST_WK_ID
--			WHERE DATA_DT BETWEEN FIRST_DAY(TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD'))::DATE - 1 AND TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')
		) ATS
	GROUP BY AR_ID) BAL ON BAL.AR_ID = AXA.AR_ID						   
LEFT JOIN #STATICPARM.DMT_DBSCHEMA#.DIM_DEPOSIT dd ON dd.ACCOUNT_NO = ar.UNQ_ID_SRC_STM
	AND to_date(#DYNAMICPARM.DATADT#, 'yyyymmdd')::DATE BETWEEN dd.EFF_FROM_DATE AND dd.EFF_TO_DATE  
--LNQ FIX SODU491_LCY, SODU491_FCY 20230203
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AU AMT491 ON  AMT491.DATA_DT = to_date(#DYNAMICPARM.DATADT#, 'yyyymmdd')::DATE AND AMT491.AR_ID = axa.AR_ID AND AMT491.GL_AC_NBR LIKE '49%'
--END										   
WHERE axa.DATA_DT = to_date(#DYNAMICPARM.DATADT#, 'yyyymmdd')::DATE
and axa.AR_CRB_ID  <> 'ROUNDING.ADJUSTMENT'  
AND Left(axa.GL_AC_NBR,2) IN (42,43,44)
AND axa.SRC_STM_ID IN ('103900029') AND axa.AR_X_AU_TP_ID = 103800001 --CLSBAL

------------------------------------------------------------------------------------------------------------------------------------

-- ETL Jobname: FACT_LOAN_T24

WITH LENDING AS
	(
	SELECT NVL(pnp.DATA_DT, int.DATA_DT) AS DATA_DT, NVL(pnp.FILE_ID, int.FILE_ID) AS FILE_ID, NVL(pnp.AR_ID, int.AR_ID) AS AR_ID,
		NVL(pnp.CONTRACT_NO, int.CONTRACT_NO) AS CONTRACT_NO, 
		CASE WHEN pnp.AR_ID IS NOT NULL THEN pnp.GL_NBR
			ELSE int.GL_NBR
		END AS GL_CODE_3, NVL(pnp.CCY_ID, int.CCY_ID) AS CURRENCY,
		NVL(pnp.OU_ID, int.OU_ID) OU_ID, NVL(pnp.LMT_AMT, int.LMT_AMT) AS LMT_AMT,
		CAST(NVL(pnp.PR_BAL_LCY, 0) * (-1) AS DECIMAL(20, 4)) AS PR_BAL_LCY, CAST((NVL(pnp.PR_BAL_FCY, 0) * (-1)) AS DECIMAL(20,4)) AS PR_BAL_FCY, 
		CAST((SUM(NVL(int.ACCURAL_AMT_394_EQ, 0)) * (-1)) AS DECIMAL(20, 4)) AS ACCURAL_AMT_394_EQ
		, CAST((SUM(NVL(int.ACCURAL_AMT_394, 0)) * (-1)) AS DECIMAL(20, 4)) AS ACCURAL_AMT_394
		, CAST((SUM(NVL(int.ACCURAL_AMT_94_EQ, 0)) * (-1)) AS DECIMAL(20, 4)) AS ACCURAL_AMT_94_EQ
		, CAST((SUM(NVL(int.ACCURAL_AMT_94, 0)) * (-1)) AS DECIMAL(20, 4)) AS ACCURAL_AMT_94
		, NVL(pnp.LMT_AR_ID, int.LMT_AR_ID) AS LMT_AR_ID
	FROM
	(
		SELECT axau.DATA_DT, ska.FILE_ID, axau.AR_ID, ska.UNQ_ID_SRC_STM CONTRACT_NO, axau.OU_ID, gl.GL_NBR, axau.CCY_ID, 
			MAX(NVL(axlt.LMT_AMT, axlt2.LMT_AMT)) AS LMT_AMT, SUM(axau.BAL_LCY) PR_BAL_LCY, SUM(axau.BAL_FCY) PR_BAL_FCY, 
			NVL(axa.OBJ_AR_ID, axa2.OBJ_AR_ID) AS LMT_AR_ID
		FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AU axau
		JOIN #STATICPARM.SFDB2_DBSCHEMA#.SRGT_KEY_AR ska ON (ska.AR_ID = axau.AR_ID) /* FILE_ID lay nguon cua khoan vay */   
		JOIN #STATICPARM.SFDB2_DBSCHEMA#.GL_PARAM gl ON (axau.GL_AC_NBR = INT4(gl.GL_NBR))
		/*BEGIN: overdraft limit*/
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AR axa ON (axa.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD') AND axa.AR_X_AR_TP_ID = 100700001 /*LIMITLK*/ AND axau.AR_ID = axa.SBJ_AR_ID)
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_LMT_TP axlt ON (axa.OBJ_AR_ID = axlt.ar_id 
											AND axlt.LMT_TP_ID = 103400002 /*LIMIT*/
											AND axlt.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD'))
		/* END: overdraft limit*/
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.SRGT_KEY_AR od /* thau chi (overdraft) */ ON (od.AR_ID = axa.OBJ_AR_ID)
		/* BEGIN: Lay thong tin limit cua PDPD - Thau chi qua han */
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AR pdpd_x_ac ON (pdpd_x_ac.SBJ_AR_ID = axau.AR_ID AND pdpd_x_ac.DATA_DT = axau.DATA_DT 
											AND pdpd_x_ac.AR_X_AR_TP_ID  = 100700023 /*PDPD_X_AC: Tai khoan thau chi qua han*/)
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AR axa2 ON (axa2.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD') AND axa2.AR_X_AR_TP_ID = 100700001 /*LIMITLK*/ AND axa2.SBJ_AR_ID = pdpd_x_ac.OBJ_AR_ID)
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_LMT_TP axlt2 ON (axa2.OBJ_AR_ID = axlt2.ar_id 
											AND axlt2.LMT_TP_ID = 103400002 /*LIMIT*/
											AND axlt2.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD'))
		/* END: Lay thong tin limit cua PDPD - Thau chi qua han */
		WHERE axau.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD')
		AND axau.AR_X_AU_TP_ID = 103800001 /* CLOSINGBAL */
		/* 2024-01-19: thaont BEGIN edit: bo sung group CHOVAYTT2_KT */
		AND gl.GL_TYPE IN ('CHOVAYTT1', 'CHOVAYTT1BS', 'CHOVAYTT2', 'CHOVAYTT2_KT', 'NOVAMC', 'NOXLRR')
		AND gl.PARA_GROUP != 'LAI' /* bo ra GL = 9712:GL_TYPE = NOXLRR: Loan interest losses under supervision-NO LAI DA XLRR DANG TRONG THOI GIAN THEO DOI*/
		/* 2024-01-19: thaont END edit: bo sung group CHOVAYTT2_KT */
		--AND (gl.GL_TYPE IN ('CHOVAYTT1', 'CHOVAYTT2', 'NOVAMC') /*2024-01-19: thaont comment code nay */
			--OR (gl.GL_TYPE IN( 'CHOVAYTT1BS', 'NOXLRR') AND SUBSTR(ska.UNQ_ID_SRC_STM, 1, 2) IN ('LD', 'PD')
			--AND gl.GL_NBR != '9712' /*Loan interest losses under supervision-NO LAI DA XLRR DANG TRONG THOI GIAN THEO DOI*/)
			--)
		AND (ska.FILE_ID IN ('CONSUMER_LOAN', 'LD','PD') /* PD gom PDLD: vay LD qua han, PDPD: thau chi qua han */
			OR (ska.FILE_ID = 'ACCOUNT' AND Right(od.UNQ_ID_SRC_STM, 7) IN ('1200.01', '1300.01', '1500.01')) /* doi voi ACCOUNT chi lay thau chi (overdraft) */
			)
		GROUP BY axau.DATA_DT, ska.FILE_ID, axau.AR_ID, ska.UNQ_ID_SRC_STM, axau.OU_ID, gl.GL_NBR, axau.CCY_ID, NVL(axa.OBJ_AR_ID, axa2.OBJ_AR_ID)
	) pnp /*principal: goc vay*/
	FULL OUTER JOIN /* full join de lay luon cac truong hop LD het goc vay nhung con lai (do no qua han thu goc truoc) hoac ACCOUNT OVERDRAFT chi co lai */ 
	(
		SELECT axau.DATA_DT, ska.FILE_ID, axau.AR_ID, ska.UNQ_ID_SRC_STM CONTRACT_NO, axau.OU_ID, gl.GL_NBR, axau.CCY_ID, 
			MAX(NVL(axlt.LMT_AMT, axlt2.LMT_AMT)) LMT_AMT,
			SUM(CASE WHEN gl.GL_TYPE = 'LAIDUTHU' THEN axau.BAL_LCY ELSE 0 END) ACCURAL_AMT_394_EQ,
			SUM(CASE WHEN gl.GL_TYPE = 'LAIDUTHU' THEN axau.BAL_FCY ELSE 0 END) ACCURAL_AMT_394,
			SUM(CASE WHEN gl.GL_TYPE = 'LAITREO' THEN axau.BAL_LCY ELSE 0 END) ACCURAL_AMT_94_EQ, 
			SUM(CASE WHEN gl.GL_TYPE = 'LAITREO' THEN axau.BAL_FCY ELSE 0 END) ACCURAL_AMT_94, 
			NVL(axa.OBJ_AR_ID, axa2.OBJ_AR_ID) AS LMT_AR_ID
		FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AU axau
		JOIN #STATICPARM.SFDB2_DBSCHEMA#.SRGT_KEY_AR ska ON (ska.AR_ID = axau.AR_ID) /*lay nguon cua tai khoan*/   
		JOIN #STATICPARM.SFDB2_DBSCHEMA#.GL_PARAM gl ON (axau.GL_AC_NBR = INT4(gl.GL_NBR))
		/*BEGIN: overdraft limit*/
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AR axa ON (axa.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD') AND axa.AR_X_AR_TP_ID = 100700001 /*LIMITLK*/ AND axau.AR_ID = axa.SBJ_AR_ID)
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_LMT_TP axlt ON (axa.OBJ_AR_ID = axlt.ar_id 
											AND axlt.LMT_TP_ID = 103400002 /*LIMIT*/
											AND axlt.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD'))
		/* END: overdraft limit*/	
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.SRGT_KEY_AR od /* thau chi (overdraft) */ ON (od.AR_ID = axa.OBJ_AR_ID)
		/* BEGIN: Lay thong tin limit cua PDPD - Thau chi qua han */
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AR pdpd_x_ac ON (pdpd_x_ac.SBJ_AR_ID = axau.AR_ID AND pdpd_x_ac.DATA_DT = axau.DATA_DT 
											AND pdpd_x_ac.AR_X_AR_TP_ID  = 100700023 /*PDPD_X_AC: Tai khoan thau chi qua han*/)
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AR axa2 ON (axa2.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD') AND axa2.AR_X_AR_TP_ID = 100700001 /*LIMITLK*/ AND axa2.SBJ_AR_ID = pdpd_x_ac.OBJ_AR_ID)
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_LMT_TP axlt2 ON (axa2.OBJ_AR_ID = axlt2.ar_id 
											AND axlt2.LMT_TP_ID = 103400002 /*LIMIT*/
											AND axlt2.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD'))
		/* END: Lay thong tin limit cua PDPD - Thau chi qua han */
		WHERE gl.PARA_GROUP = 'LAI'
		AND axau.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD')
		AND axau.AR_X_AU_TP_ID = 103800001 /* CLOSINGBAL */
		AND (ska.FILE_ID IN ('CONSUMER_LOAN', 'LD','PD') /* PD gom PDLD: vay LD qua han, PDPD: thau chi qua han */
			OR (ska.FILE_ID = 'ACCOUNT' AND Right(od.UNQ_ID_SRC_STM, 7) IN ('1200.01', '1300.01', '1500.01')) /* doi voi ACCOUNT chi lay thau chi (overdraft) */
			)
		GROUP BY axau.DATA_DT, ska.FILE_ID, axau.AR_ID, ska.UNQ_ID_SRC_STM, axau.OU_ID, gl.GL_NBR, axau.CCY_ID, NVL(axa.OBJ_AR_ID, axa2.OBJ_AR_ID)
	) int /*interest - lai vay*/ ON (pnp.AR_ID = int.AR_ID)
	--WHERE (pnp.AR_ID = 201398034 OR int.ar_id = 201398034) /*LD chi co lai, ko co goc*/
	--WHERE int.CONTRACT_NO = '0037110007332009' /*thau chi chi co lai do ?*/
	--WHERE pnp.contract_no = 'LD2202000220'
	--WHERE nvl(pnp.FILE_ID, int.FILE_ID) = 'ACCOUNT'
	--WHERE pnp.contract_no = '0001100016477007' /*flt sai PR, PE, PS,IN*/
	GROUP BY NVL(pnp.DATA_DT, int.DATA_DT), NVL(pnp.FILE_ID, int.FILE_ID), NVL(pnp.AR_ID, int.AR_ID),
		NVL(pnp.CONTRACT_NO, int.CONTRACT_NO), 
		CASE WHEN pnp.AR_ID IS NOT NULL THEN pnp.GL_NBR
			ELSE int.GL_NBR
		END /*GL_CODE_3*/, NVL(pnp.CCY_ID, int.CCY_ID) /*CURRENCY*/,
		NVL(pnp.OU_ID, int.OU_ID) /* OU_ID*/, NVL(pnp.LMT_AMT, int.LMT_AMT) /* LMT_AMT */,
		CAST(NVL(pnp.PR_BAL_LCY, 0) * (-1) AS DECIMAL(20, 4)) /*PR_BAL_LCY*/, CAST((NVL(pnp.PR_BAL_FCY, 0) * (-1)) AS DECIMAL(20,4)) /*PR_BAL_FCY*/, 
		NVL(pnp.LMT_AR_ID, int.LMT_AR_ID) /* LMT_AR_ID */
	) /*END CTE: WITH LENDING*/
SELECT DISTINCT ld.DATA_DT AS DATE_COB, CASE WHEN ld.FILE_ID = 'CONSUMER_LOAN' THEN 'COMB' ELSE 'T24' END DATASOURCE, ld.AR_ID
	, CAST (ld.CONTRACT_NO AS VARCHAR(30)) AS CONTRACT_NO,
	CAST(cif.UNQ_ID_SRC_STM AS INTEGER) CUSTOMER_ID, /*note: category nhan vien thi set NULL: khong co */
	ld.GL_CODE_3, ld.CURRENCY, CAST(ouk.UNQ_ID_SRC_STM AS VARCHAR(9)) AS BRANCH_CODE, 
	CASE WHEN ld.FILE_ID IN ('PD', 'LD', 'CONSUMER_LOAN') THEN NVL(ats.DRDWN_AMT_FCY, 0)
		WHEN ld.FILE_ID IN ('ACCOUNT') THEN NVL(ld.LMT_AMT, 0) END AS DRAW_DOWN_AMT,
	CASE WHEN ld.FILE_ID IN ('PD', 'LD', 'CONSUMER_LOAN') THEN NVL(ats.DRDWN_AMT_LCY, 0)
		WHEN ld.FILE_ID IN ('ACCOUNT') THEN NVL(ld.LMT_AMT, 0) END AS DRAW_DOWN_LCY_AMT, /* hien tai thau chi chi co VND, nen ko can * ty gia*/
	ld.PR_BAL_FCY AS BALANCE_AMT, ld.PR_BAL_LCY AS BALANCE_LCY_AMT,
	ld.ACCURAL_AMT_394, ld.ACCURAL_AMT_394_EQ, ld.ACCURAL_AMT_94, ld.ACCURAL_AMT_94_EQ,
	CASE WHEN ld.FILE_ID IN ('LD', 'CONSUMER_LOAN') THEN CAST(NVL(ld_shd.TAMT_PD_PR, 0) AS DECIMAL(20, 4))
		WHEN ld.FILE_ID IN ('ACCOUNT', 'PD') THEN CAST(NVL(pdpd_shd.TAMT_PD_PR, 0) AS DECIMAL(20, 4)) END AS PR_AMT,
	CASE WHEN ld.FILE_ID IN ('LD', 'CONSUMER_LOAN') THEN CAST(NVL(ld_shd.TAMT_PD_IN, 0) AS DECIMAL(20, 4))
		WHEN ld.FILE_ID IN ('ACCOUNT', 'PD') THEN CAST(NVL(pdpd_shd.TAMT_PD_IN, 0) AS DECIMAL(20, 4)) END AS IN_AMT,
	CASE WHEN ld.FILE_ID IN ('LD', 'CONSUMER_LOAN') THEN CAST(NVL(ld_shd.TAMT_PD_PE, 0) AS DECIMAL(20, 4))
		WHEN ld.FILE_ID IN ('ACCOUNT', 'PD') THEN CAST(NVL(pdpd_shd.TAMT_PD_PE, 0) AS DECIMAL(20, 4)) END AS PE_AMT,
	CASE WHEN ld.FILE_ID IN ('LD', 'CONSUMER_LOAN') THEN CAST(NVL(ld_shd.TAMT_PD_PS, 0) AS DECIMAL(20, 4))
		WHEN ld.FILE_ID IN ('ACCOUNT', 'PD') THEN CAST(NVL(pdpd_shd.TAMT_PD_PS, 0) AS DECIMAL(20, 4)) END AS PS_AMT,
	CASE WHEN ld.FILE_ID IN ('LD', 'CONSUMER_LOAN') THEN NVL(ld_shd.MX_PD_PR_DYS, 0)
		WHEN ld.FILE_ID IN ('ACCOUNT', 'PD') THEN NVL(pdpd_shd.MX_PD_PR_DYS, 0) END AS DPD_PRINCIPAL,
	CASE WHEN ld.FILE_ID IN ('LD', 'CONSUMER_LOAN') THEN NVL(ld_shd.MX_PD_IN_DYS, 0)
		WHEN ld.FILE_ID IN ('ACCOUNT', 'PD') THEN NVL(pdpd_shd.MX_PD_IN_DYS, 0) END AS IN_DAY_ORG,
	CASE WHEN ld.FILE_ID IN ('LD', 'CONSUMER_LOAN') THEN GREATEST(NVL(ld_shd.MX_PD_IN_DYS, 0), NVL(ld_shd.MX_PD_PE_DYS, 0), NVL(ld_shd.MX_PD_PS_DYS, 0))
		WHEN ld.FILE_ID IN ('ACCOUNT', 'PD') THEN GREATEST(NVL(pdpd_shd.MX_PD_IN_DYS, 0), NVL(pdpd_shd.MX_PD_PE_DYS, 0), NVL(pdpd_shd.MX_PD_PS_DYS, 0)) END AS DPD_INTEREST,
	CASE WHEN ld.FILE_ID IN ('LD', 'CONSUMER_LOAN') THEN GREATEST(NVL(ld_shd.MX_PD_IN_DYS, 0), NVL(ld_shd.MX_PD_PE_DYS, 0), NVL(ld_shd.MX_PD_PS_DYS, 0), NVL(ld_shd.MX_PD_PR_DYS, 0))
		WHEN ld.FILE_ID IN ('ACCOUNT', 'PD') THEN GREATEST(NVL(pdpd_shd.MX_PD_IN_DYS, 0), NVL(pdpd_shd.MX_PD_PE_DYS, 0), NVL(pdpd_shd.MX_PD_PS_DYS, 0), NVL(pdpd_shd.MX_PD_PR_DYS, 0)) END AS MAX_DPD_LD
	, CAST(NVL(wd.WITHDRW_ACC, 0) AS DECIMAL(20, 4)) AS WITHDRW_ACC, CAST(NVL(wd.WITHDRW_IN, 0) AS DECIMAL(20, 4)) AS WITHDRW_IN
	, CAST(NVL(wd.WITHDRW_PE, 0) AS DECIMAL(20, 4)) AS WITHDRW_PE, CAST(NVL(wd.WITHDRW_PS, 0) AS DECIMAL(20, 4)) AS WITHDRW_PS,
	CAST(NVL(wd.WITHDRW_ACC, 0) + NVL(wd.WITHDRW_IN, 0) + NVL(wd.WITHDRW_PE, 0) + NVL(wd.WITHDRW_PS, 0) AS DECIMAL(20,4)) AS TOTAL_WITHDRAWAL,
	CAST(NVL(wd.WITHDRW_ACC, 0) + 
	CASE 
		WHEN ld.FILE_ID IN ('LD', 'CONSUMER_LOAN') THEN 
			NVL(ld_shd.TAMT_PD_IN, 0) + NVL(ld_shd.TAMT_PD_PE, 0) + NVL(ld_shd.TAMT_PD_PS, 0)
		WHEN ld.FILE_ID IN ('ACCOUNT', 'PD') THEN
			NVL(pdpd_shd.TAMT_PD_IN, 0) + NVL(pdpd_shd.TAMT_PD_PE, 0) + NVL(pdpd_shd.TAMT_PD_PS, 0)
	END AS DECIMAL(20, 4)) AS TOTAL,
	CAST(axr.INT_RATE_TYPE AS VARCHAR(1)) AS INT_RATE_TYPE, axr.RATE_ID AS INTEREST_KEY,
	CAST(NVL(NVL(axr.NORINT_EFF_RATE_PCT, axr.PENINT_EFF_RATE_PCT), axr.GCIINT_EFF_RATE_PCT) AS DECIMAL(20, 6)) AS INTEREST_RATE,
	CASE 
		WHEN axr.NORINT_EFF_RATE_PCT IS NOT NULL THEN CAST(axr.NORINT_EFF_RATE_PCT - NVL(axr.NOR_SPRD_RATE_PCT, 0) AS DECIMAL(20, 6))
		WHEN axr.PENINT_EFF_RATE_PCT IS NOT NULL THEN CAST(axr.PENINT_EFF_RATE_PCT - NVL(axr.PEN_SPRD_RATE_PCT, 0) AS DECIMAL(20, 6))
		WHEN axr.GCIINT_EFF_RATE_PCT IS NOT NULL THEN CAST(axr.GCIINT_EFF_RATE_PCT - NVL(axr.GCI_SPRD_RATE_PCT, 0) AS DECIMAL(20, 6))
	END AS INTEREST_BASE,
	CASE 
		WHEN axr.NORINT_EFF_RATE_PCT IS NOT NULL THEN CAST(NVL(axr.NOR_SPRD_RATE_PCT, 0) AS DECIMAL(20, 6))
		WHEN axr.PENINT_EFF_RATE_PCT IS NOT NULL THEN CAST(NVL(axr.PEN_SPRD_RATE_PCT, 0) AS DECIMAL(20, 6))
		WHEN axr.GCIINT_EFF_RATE_PCT IS NOT NULL THEN CAST(NVL(axr.GCI_SPRD_RATE_PCT, 0) AS DECIMAL(20, 6))
	END AS INTEREST_SPREAD,
	CAST(NVL(axr.PENINT_EFF_RATE_PCT, 0) AS DECIMAL(20, 10)) AS PENALTY_RATE,
	CAST(NVL(axr.PEN_SPRD_RATE_PCT, 0) AS DECIMAL(20, 10)) AS PENALTY_SPREAD,
	CASE WHEN ld.FILE_ID IN ('LD', 'CONSUMER_LOAN') THEN CAST(ld.PR_BAL_LCY - NVL(ld_shd.TAMT_PD_PR, 0) AS DECIMAL(20, 4))
		WHEN ld.FILE_ID IN ('ACCOUNT', 'PD') THEN CAST(ld.PR_BAL_LCY - NVL(pdpd_shd.TAMT_PD_PR, 0) AS DECIMAL(20, 4)) END AS LD_AMOUNT_EQ,
	CASE WHEN ld.FILE_ID IN ('LD', 'CONSUMER_LOAN') THEN CAST(NVL(ld_shd.TAMT_PD_PR, 0) AS DECIMAL(20, 4))
		WHEN ld.FILE_ID IN ('ACCOUNT', 'PD') THEN CAST(NVL(pdpd_shd.TAMT_PD_PR, 0) AS DECIMAL(20, 4)) END AS PD_AMOUNT_EQ,
	CAST(pr_int_repacc.PR_LIQ_ACCT AS VARCHAR(16)) AS PR_LIQ_ACCT, CAST(pr_int_repacc.INT_LIQ_ACCT AS VARCHAR(16)) AS INT_LIQ_ACCT
	, sq_next_pay.NEXT_DATE_IN as NEXT_DATE_IN,	
	sq_next_pay.NEXT_AMT_IN as NEXT_AMT_IN,	sq_next_pay.NEXT_DATE_PR as NEXT_DATE_PR,
	sq_next_pay.NEXT_AMT_PR as NEXT_AMT_PR
	, CAST(avg_bal.AVG_BAL_FROM_MONTH_BEGIN AS DECIMAL(20, 4)) AS AVG_BAL_FROM_MONTH_BEGIN
	, ftp_rt.TOTAL_INT_RATE AS FTP_RATE 
	, ftp_rt.TOTAL_INT_RATE_PD AS FTP_RATE_PAST_DUE
	/*, nml.TVAL_NML_AMT, SUM(ld.PR_BAL_LCY) OVER (PARTITION BY nml.CLT_RGHT_ID) AS TVAL_PR_BAL_LCY,*/
	, nml.COLLATERAL_TYPE
	, CASE WHEN nml.TVAL_NML_AMT = 0 OR SUM(ld.PR_BAL_LCY) OVER (PARTITION BY nml.LMT_AR_ID) = 0 OR nml.LMT_AR_ID IS NULL THEN NULL::DECIMAL(20,4)
		ELSE (ROUND(ld.PR_BAL_LCY::DECIMAL(20,4) / (SUM(ld.PR_BAL_LCY) OVER (PARTITION BY nml.LMT_AR_ID)::DECIMAL(20,4)), 4) * nml.TVAL_NML_AMT::DECIMAL(20,4))::DECIMAL(20,4)
	END AS COLLATERAL_NOMINAL
	--, ld.LMT_AR_ID
	, CAST(dim.DIMENSION_KEY AS DECIMAL(20,0)) AS LD_FK
FROM LENDING ld
/* begin: lay thong tin cif */
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR ar ON (ar.AR_ID = ld.AR_ID)
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_IP arxcif ON (arxcif.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')
        AND arxcif.AR_ID = ld.AR_ID
        AND arxcif.SRC_STM_ID = 103900001 /* AC */
        AND arxcif.AR_X_IP_TP_ID = 100800020 /* AC_X_CIF */
        )/*2023-07-30: thaont note: ACCOUNT co thay doi CIF, neu lay du lieu qua khu thi sai CIF khi CIF_HIEN_TAI khac CIF_QUA_KHU (lay CIF tu AR thi chi lay gia tri hien tai)*/
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.SRGT_KEY_IP cif ON (cif.IP_ID = NVL(arxcif.IP_ID, ar.PRIM_CST_ID) AND cif.FILE_ID = 'CUSTOMER')
/* end:  lay thong tin cif */
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.SRGT_KEY_IP ouk ON (ouk.IP_ID = ld.OU_ID) /*lay ma chi nhanh*/
/*lay DRAW_DOWN_AMT, DRAW_DOWN_LCY_AMT cho nguon PD, LD va COMB*/
LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_TVR_SMY ats ON (ats.AR_ID = ld.AR_ID AND ats.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')
									AND ats.SRC_STM_ID IN (103900006 /*PD*/, 103900050 /*T24_LD*/, 103900048 /*COMB_CONSUMER_LOAN*/))
LEFT JOIN /*lay thong tin qua han cua LD va COMB*/
(
	SELECT  
		shd.AR_ID,
		SUM(CASE WHEN (shd.AVY_TP_ID = 101500001 /*PR*/) THEN shd.SHD_AMT ELSE 0 END) AS TAMT_PD_PR,
		SUM(CASE WHEN (shd.AVY_TP_ID = 101500002 /*IN*/) THEN shd.SHD_AMT ELSE 0 END) AS TAMT_PD_IN,
		SUM(CASE WHEN (shd.AVY_TP_ID = 101500004 /*PE*/) THEN shd.SHD_AMT ELSE 0 END) AS TAMT_PD_PE,
		SUM(CASE WHEN (shd.AVY_TP_ID = 101500005 /*PS*/) THEN shd.SHD_AMT ELSE 0 END) AS TAMT_PD_PS,
		DAYS(TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')) - DAYS(MIN(CASE WHEN (shd.AVY_TP_ID = 101500001 /*PR*/) THEN shd.SHD_DT ELSE shd.EFF_DT END)) AS MX_PD_PR_DYS,
		DAYS(TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')) - DAYS(MIN(CASE WHEN (shd.AVY_TP_ID = 101500002 /*IN*/) THEN shd.SHD_DT ELSE shd.EFF_DT END)) AS MX_PD_IN_DYS,
		DAYS(TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')) - DAYS(MIN(CASE WHEN (shd.AVY_TP_ID = 101500004 /*PE*/) THEN shd.SHD_DT ELSE shd.EFF_DT END)) AS MX_PD_PE_DYS,
		DAYS(TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')) - DAYS(MIN(CASE WHEN (shd.AVY_TP_ID = 101500005 /*PS*/) THEN shd.SHD_DT ELSE shd.EFF_DT END)) AS MX_PD_PS_DYS
	FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_AVY_SHD_ITM shd 
	WHERE shd.AVY_TP_ID IN (101500001 /*PR*/, 101500002 /*IN*/, 101500004 /*PE*/, 101500005 /*PS*/) 
	AND shd.SHD_DT <= TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD') /* lay record bi qua han*/
	AND NVL(shd.SHD_AMT, 0) <> 0
	and shd.EFF_DT = TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD')
	GROUP BY shd.AR_ID
) ld_shd ON (ld.AR_ID = ld_shd.AR_ID)
LEFT JOIN 
(
	SELECT /* lay thong tin qua han cua ACCOUNT (ACCOUNT thau chi trong han) va PDPD (ACCOUNT thau chi qua han) */
		shd.AR_ID ACC_AR_ID, pd_x_acc.OBJ_AR_ID PDPD_AR_ID,
		SUM(CASE WHEN (shd.AVY_TP_ID = 101500001 /*PR*/) THEN shd.AVY_AMT ELSE 0 END) AS TAMT_PD_PR,
		SUM(CASE WHEN (shd.AVY_TP_ID = 101500002 /*IN*/) THEN shd.AVY_AMT ELSE 0 END) AS TAMT_PD_IN,
		SUM(CASE WHEN (shd.AVY_TP_ID = 101500004 /*PE*/) THEN shd.AVY_AMT ELSE 0 END) AS TAMT_PD_PE,
		SUM(CASE WHEN (shd.AVY_TP_ID = 101500005 /*PS*/) THEN shd.AVY_AMT ELSE 0 END) AS TAMT_PD_PS,
		DAYS(TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')) - DAYS(MIN(CASE WHEN (shd.AVY_TP_ID = 101500001 /*PR*/) THEN shd.EXPC_STRT_DT ELSE shd.EFF_DT END)) AS MX_PD_PR_DYS,
		DAYS(TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')) - DAYS(MIN(CASE WHEN (shd.AVY_TP_ID = 101500002 /*IN*/) THEN shd.EXPC_STRT_DT ELSE shd.EFF_DT END)) AS MX_PD_IN_DYS,
		DAYS(TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')) - DAYS(MIN(CASE WHEN (shd.AVY_TP_ID = 101500004 /*PE*/) THEN shd.EXPC_STRT_DT ELSE shd.EFF_DT END)) AS MX_PD_PE_DYS,
		DAYS(TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')) - DAYS(MIN(CASE WHEN (shd.AVY_TP_ID = 101500005 /*PS*/) THEN shd.EXPC_STRT_DT ELSE shd.EFF_DT END)) AS MX_PD_PS_DYS
	FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_AVY_SHD shd
	LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AR pd_x_acc ON (pd_x_acc.SBJ_AR_ID = shd.AR_ID
										  AND pd_x_acc.AR_X_AR_TP_ID = 100700023  --PD_X_ACC
										  AND pd_x_acc.SRC_STM_ID = 103900006	--PD
										  AND pd_x_acc.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD'))
	WHERE shd.AVY_TP_ID IN (101500001 /*PR*/, 101500002 /*IN*/, 101500004 /*PE*/, 101500005 /*PS*/) 
	AND NVL(shd.AVY_AMT, 0) <> 0
	and shd.EFF_DT = TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD')
	and shd.SRC_STM_ID = 103900006
--	AND (shd.AR_ID = 243988211 or pd_x_acc.OBJ_AR_ID  =243988211) /*243988211	0001100016477007*/
	GROUP BY shd.AR_ID, pd_x_acc.OBJ_AR_ID 
) pdpd_shd ON ((ld.AR_ID = pdpd_shd.ACC_AR_ID OR ld.AR_ID = pdpd_shd.PDPD_AR_ID) AND (ld.FILE_ID IN ('PD', 'ACCOUNT'))) /* chi lay ACCOUNT va PDPD: loai ra lich cua LD va COMB*/
LEFT JOIN 
( /*LN_CUST_REVS_DTLS01VT01 thoai thu keo theo hien tai chi co ACC do job nay chi lay tat ca cho ACC*/
	SELECT shd.AR_ID,
	    SUM(CASE WHEN (shd.AVY_TP_ID = 2016000001 /*ACC*/) THEN NVL(shd.ACT_AMT, 0) ELSE 0 END) AS WITHDRW_ACC,
	    SUM(CASE WHEN (shd.AVY_TP_ID = 2016000002 /*IN*/) THEN NVL(shd.ACT_AMT, 0) ELSE 0 END) AS WITHDRW_IN,
	    SUM(CASE WHEN (shd.AVY_TP_ID = 2016000003 /*PE*/) THEN NVL(shd.ACT_AMT, 0) ELSE 0 END) AS WITHDRW_PE,
	    SUM(CASE WHEN (shd.AVY_TP_ID = 2016000004 /*PS*/) THEN NVL(shd.ACT_AMT, 0) ELSE 0 END) AS WITHDRW_PS 
	FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_AVY_SHD_ITM shd 
	WHERE shd.AVY_TP_ID IN (2016000001 /*ACC*/, 2016000002 /*IN*/, 2016000003 /*PE*/, 2016000004 /*PS*/)
	AND shd.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')
	GROUP BY shd.AR_ID
) wd /*withdrawal*/ ON wd.AR_ID = ld.AR_ID
LEFT JOIN /*lay thong tin lai suat*/
(
	SELECT axr.AR_ID, 
	MAX(axr.RATE_ID) RATE_ID, /* chi co RATE_TP_ID = 100900001 - NORINT - moi co gia tri RATE_ID*/
	CASE WHEN MAX(axr.RATE_VAR_TP_ID) = 101200001 /*FIX*/ THEN 1
		WHEN MAX(axr.RATE_VAR_TP_ID) = 101200002 /*VAR*/ THEN 2 END AS INT_RATE_TYPE,
	MAX(CASE WHEN axr.RATE_TP_ID = 100900001 /*NORINT*/ THEN axr.EFF_RATE_PCT ELSE NULL END) AS NORINT_EFF_RATE_PCT,
	MAX(CASE WHEN axr.RATE_TP_ID = 100900002 /*PENINT*/ THEN axr.EFF_RATE_PCT ELSE NULL END) AS PENINT_EFF_RATE_PCT,
	MAX(CASE WHEN axr.RATE_TP_ID = 100900008 /*GCIINT*/ THEN axr.EFF_RATE_PCT ELSE NULL END) AS GCIINT_EFF_RATE_PCT,
	MAX(CASE WHEN axr.RATE_TP_ID = 100900001 /*NORINT*/ THEN axr.SPRD_RATE_PCT ELSE NULL END) AS NOR_SPRD_RATE_PCT,
	MAX(CASE WHEN axr.RATE_TP_ID = 100900002 /*PENINT*/ THEN axr.SPRD_RATE_PCT ELSE NULL END) AS PEN_SPRD_RATE_PCT,
	MAX(CASE WHEN axr.RATE_TP_ID = 100900008 /*GCIINT*/ THEN axr.SPRD_RATE_PCT ELSE NULL END) AS GCI_SPRD_RATE_PCT
	FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_X_RATE axr
	WHERE DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD')
	AND axr.EFF_RATE_PCT IS NOT NULL 
	AND axr.RATE_TP_ID IN (100900001 /*NORINT: Normal Interest Rate*/, 100900002 /*PENINT: Penalty Interest Rate*/, 100900008 /*GCIINT: GCI Interest Rate*/)
	AND axr.AR_X_RATE_TP_TP_ID IN (101100001/*INTEREST*/, 101100003 /*PDINTEREST*/)
	GROUP BY axr.AR_ID
) axr ON (axr.AR_ID = ld.AR_ID)
LEFT JOIN /*Principal Repayment Account and Interest Repayment Account*/
(
	SELECT axa.SBJ_AR_ID, 
		MAX(CASE WHEN axa.AR_X_AR_TP_ID = 100700006 /*PRREPACCLK*/ THEN ska.UNQ_ID_SRC_STM ELSE NULL END) AS PR_LIQ_ACCT,
		MAX(CASE WHEN axa.AR_X_AR_TP_ID = 100700005 /*INTREPACCLK*/ THEN ska.UNQ_ID_SRC_STM ELSE NULL END) AS INT_LIQ_ACCT
	FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AR axa
	JOIN #STATICPARM.SFDB2_DBSCHEMA#.SRGT_KEY_AR ska ON (ska.AR_ID = axa.OBJ_AR_ID)
	WHERE axa.AR_X_AR_TP_ID IN (100700005 /*INTREPACCLK : Interest Repayment Account*/, 100700006 /*PRREPACCLK : Principal Repayment Account*/) 
	AND axa.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD')
	AND axa.SRC_STM_ID = 103900050 /*T24_LD*/
	GROUP BY axa.SBJ_AR_ID
) pr_int_repacc ON pr_int_repacc.SBJ_AR_ID = ld.AR_ID
LEFT JOIN  
(
	-- 2023-07-02: thaont tinh tong NEXT_AMT_PR, NEXT_AMT_PR tach theo AVY_TP_ID.
	SELECT shd.DATA_DT, shd.AR_ID, 
	MIN(CASE WHEN shd.AVY_TP_ID = 101500001 /*Principal Repayment Schedule*/ THEN m.MIN_SCH_DT END) NEXT_DATE_PR,
	CAST(SUM(CASE WHEN shd.AVY_TP_ID = 101500001 /*Principal Repayment Schedule*/ AND shd.SHD_DT = m.MIN_SCH_DT THEN shd.SHD_AMT ELSE 0 END) AS DECIMAL(20,4)) NEXT_AMT_PR,
	MIN(CASE WHEN shd.AVY_TP_ID = 101500002 /*Interest Schedule*/ THEN m.MIN_SCH_DT END) NEXT_DATE_IN,
	CAST(SUM(CASE WHEN shd.AVY_TP_ID = 101500002 /*Interest Schedule*/ AND shd.SHD_DT = m.MIN_SCH_DT THEN shd.SHD_AMT ELSE 0 END) AS DECIMAL(20,4)) NEXT_AMT_IN
	FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_AVY_SHD_ITM shd
	LEFT JOIN 
	(
		SELECT shd.DATA_DT, shd.AR_ID, shd.AVY_TP_ID, MIN(shd.SHD_DT) MIN_SCH_DT /*ngay lich tra goc hoac lai tiep theo gan nhat*/
		FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_AVY_SHD_ITM shd
		WHERE shd.SHD_DT > shd.DATA_DT
		AND shd.AVY_TP_ID IN (101500001 /*Principal Repayment Schedule*/, 101500002 /*Interest Schedule*/)
		GROUP BY shd.DATA_DT, shd.AR_ID, shd.AVY_TP_ID
	) m ON (m.DATA_DT = shd.DATA_DT AND m.AR_ID = shd.AR_ID AND m.AVY_TP_ID = shd.AVY_TP_ID)
	WHERE shd.DATA_DT = DATE(TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD'))
	AND shd.SHD_DT > shd.DATA_DT /*lay ngay lich tra goc hoac lai lon hon ngay bao cao: do lay ky tiep theo*/
	AND shd.AVY_TP_ID IN (101500001 /*Principal Repayment Schedule*/, 101500002 /*Interest Schedule*/)
	GROUP BY shd.DATA_DT, shd.AR_ID
) sq_next_pay ON (sq_next_pay.AR_ID = ld.AR_ID)
LEFT JOIN /* Lay so du trung binh tu ngay dau thang, tinh luon ngay nghi cua T24 */
(
	SELECT AR_ID, AVG(CLS_BOOK_BAL) AS AVG_BAL_FROM_MONTH_BEGIN
	FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_TVR_SMY ats
	JOIN #STATICPARM.SFDB2_DBSCHEMA#.WORKING_DATE wd ON ((wd.MSR_PRD_ID = ats.MSR_PRD_ID AND wd.BSN_DAY_F = 1) 
									OR (wd.BSN_DAY_F = 0 AND ats.MSR_PRD_ID = wd.LAST_WK_ID)) 
	WHERE wd.MSR_PRD_DT BETWEEN FIRST_DAY(TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD'))::date AND TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD')
	GROUP BY AR_ID
) avg_bal ON (avg_bal.AR_ID = ld.AR_ID)
/* lay lai suat Dieu chuyen von noi bo FTP */
LEFT JOIN
(
	SELECT AR_NO, MAX(CASE WHEN SUBSTR(REF_NO, 1, 2) = 'PD' THEN TOTAL_INT_RATE ELSE NULL END) AS  TOTAL_INT_RATE_PD,
		MAX(CASE WHEN SUBSTR(REF_NO, 1, 2) != 'PD' THEN TOTAL_INT_RATE ELSE NULL END) AS  TOTAL_INT_RATE
	FROM OCBFTP.FTP_CONTRACT_HIST 
	WHERE DATA_DATE  = #DYNAMICPARM.DATADT#
	AND SYSTEM_ID in ('CHOVAYKH','MUANOTCTD')
	GROUP BY AR_NO
) ftp_rt ON (ftp_rt.AR_NO = ld.CONTRACT_NO)
LEFT JOIN /* Lay thong tin Nominal theo LIMIT: Total Value Nominal Amount theo LIMIT = SUM(t_nominal_value * t_percent_alloc * t_buy_rate) * 0.01*/
(
	SELECT LMT_AR_ID, SUM(TVAL_NML_AMT)/COUNT(LMT_AR_ID) TVAL_NML_AMT
		, CAST(REGEXP_REPLACE(LISTAGG(COLLATERAL_TYPE,'::') WITHIN GROUP (ORDER BY COLLATERAL_TYPE DESC), '([^::]+)(::\1)*(::|$)', '\1\3') AS VARCHAR(100)) AS COLLATERAL_TYPE /*LISTAGG(DISTINCT)*/
	FROM /*1 LMT co nhieu CLT: LMT_AR_ID = 219690009 */
	(
		SELECT clt_x_lmt.OBJ_AR_ID AS LMT_AR_ID 
		, SUM(NVL(clt_x_lmt.OVRLP_PCT, 100) * erh.EXG_RATE_VAL * val.VAL_AMT * 0.01) TVAL_NML_AMT /* Total Value Nominal Amount */
		, SUBSTR(clt.UNQ_ID_SRC_STM, 1, INSTR(clt.UNQ_ID_SRC_STM, '.', 1, 2) - 1) CLT_RGHT_ID
		, CAST(REGEXP_REPLACE(LISTAGG(clt_pd.UNQ_ID_SRC_STM,'::') WITHIN GROUP (ORDER BY clt_x_pd.PD_ID DESC), '([^::]+)(::\1)*(::|$)', '\1\3') AS VARCHAR(100)) AS COLLATERAL_TYPE /*LISTAGG(DISTINCT)*/
		FROM #STATICPARM.SFDB2_DBSCHEMA#.AR_X_AR clt_x_lmt  /* Lay moi quan he COLLATERAL(right)_X_LIMIT */
		JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR clt ON (clt.AR_ID = clt_x_lmt.SBJ_AR_ID AND clt.AR_TP_ID = 101000006 /*COLL: Collateral*/)
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_PD clt_x_pd ON (clt_x_pd.AR_ID = clt_x_lmt.SBJ_AR_ID AND clt_x_pd.AR_X_PD_TP_ID = 102700001 /*COLLATERAL*/ 
											AND clt_x_pd.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD'))
		LEFT JOIN #STATICPARM.SFDB2_DBSCHEMA#.PD clt_pd ON (clt_pd.PD_ID = clt_x_pd.PD_ID)
		JOIN #STATICPARM.SFDB2_DBSCHEMA#.AR_X_RI clt_x_ri ON (clt_x_ri.DATA_DT = clt_x_lmt.DATA_DT AND clt_x_ri.AR_ID = clt_x_lmt.SBJ_AR_ID 
										AND clt_x_ri.AR_X_RI_TP_ID = 101300001 /*COLLRELLK : Collateral Relationship*/
										AND clt_x_ri.RI_LCS_TP_ID != 101800005 /* 05 - Released - Giai chap */)
		JOIN #STATICPARM.SFDB2_DBSCHEMA#.RI_VAL val ON (clt_x_lmt.DATA_DT = val.DATA_DT AND val.RI_ID = clt_x_ri.RI_ID AND val.RI_VAL_TP_ID = 105100004 /*NOMINAL*/ 
									AND val.RI_LCS_TP_ID != 101800005 /* 05 - Released - Giai chap */)
		JOIN #STATICPARM.SFDB2_DBSCHEMA#.EXG_RATE_HIST erh ON (erh.DATA_DT = val.DATA_DT AND erh.EXG_RATE_ID  = val.CCY_ID 
									AND erh.EXG_RATE_USG_TP_ID = 102300001 /*BUY*/ AND erh.CCY_MKT_ID = 1)
		WHERE clt_x_lmt.DATA_DT = TO_DATE('#DYNAMICPARM.DATADT#', 'YYYYMMDD')
		AND clt_x_lmt.AR_X_AR_TP_ID = 100700001 /*LIMITLK*/
		AND clt_x_lmt.OBJ_AR_ID = 219690009
		GROUP BY clt_x_lmt.OBJ_AR_ID /* LMT_AR_ID */, SUBSTR(clt.UNQ_ID_SRC_STM, 1, INSTR(clt.UNQ_ID_SRC_STM, '.', 1, 2) - 1) /*CLT_RGHT_ID*/
	) t
	GROUP BY t.LMT_AR_ID
) nml /*Nominal*/ ON (nml.LMT_AR_ID = ld.LMT_AR_ID)
LEFT JOIN #STATICPARM.DMT_DBSCHEMA#.DIM_LOAN_T24 dim ON (dim.CONTRACT_NO = ld.CONTRACT_NO 
	AND TO_DATE('#DYNAMICPARM.DATADT#','YYYYMMDD') BETWEEN EFF_FROM_DATE AND NVL(EFF_TO_DATE, TO_DATE('24000101','YYYYMMDD')))
--WHERE ld.CURRENCY <> 'VND'
--WHERE ld.FILE_ID = 'ACCOUNT'
--WHERE ld.FILE_ID = 'PD'
--WHERE ld.FILE_ID = 'LD'
--WHERE ld.FILE_ID = 'CONSUMER_LOAN'
--WHERE NVL(wd.WITHDRW_ACC, 0) <> 0